-- LAB | SQL Joins
USE sakila;

-- 1. List the number of films per category.
SELECT count(f.title) as number_films, fc.category_id, c.name
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON c.category_id = fc.category_id
GROUP BY fc.category_id;

-- 2. Retrieve the store ID, city, and country for each store.
SELECT * 
FROM store;

SELECT s.store_id, c.city, co.country
FROM store s
JOIN address a
ON s.address_id = a.address_id
JOIN city c
ON c.city_id = a.city_id
JOIN country co
ON co.country_id = c.country_id
GROUP BY s.store_id;

-- 3. Calculate the total revenue generated by each store in dollars.
SELECT s.store_id, s.store_id, SUM(p.amount) AS total_revenue
FROM store s
JOIN staff st ON s.store_id = st.store_id
JOIN payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id
ORDER BY s.store_id;

-- 4. Determine the average running time of films for each category.
SELECT c.name as category, round(avg(f.length),2) as av_time
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON c.category_id = fc.category_id
GROUP BY fc.category_id;

-- Bonus:

-- 5. Identify the film categories with the longest average running time.
SELECT c.name as category, round(avg(f.length),2) as av_time
FROM film f
JOIN film_category fc
ON f.film_id = fc.film_id
JOIN category c
ON c.category_id = fc.category_id
GROUP BY fc.category_id
ORDER BY av_time DESC
LIMIT 5;

-- 6. Display the top 10 most frequently rented movies in descending order.
SELECT f.title as movie_title, COUNT(r.rental_id) as rental_count
FROM film f
JOIN inventory i 
ON f.film_id = i.film_id
JOIN rental r 
ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 10;

-- 7. Determine if "Academy Dinosaur" can be rented from Store 1.
-- 8.Provide a list of all distinct film titles, along with their availability status in the inventory. 
	-- Include a column indicating whether each title is 'Available' or 'NOT available.' 
    -- Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."